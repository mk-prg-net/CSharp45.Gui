<!-- Achtung: Damit benutzerdefinierte Typen in XAML nutzbar sind, müssen die Namespaces,
     in die sie eingeschlossen sind, mit Namespacepräfixe wie local vereinbart werden -->
<Window x:Class="WPF.Calculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        
        xmlns:local="clr-namespace:WPF.Calculator"
        xmlns:Calc="clr-namespace:CS.Calculator"
        
        Title="MainWindow" Height="350" Width="525">
    <Grid x:Name="grdMain">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <!-- Menü -->
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="Protokoll sichern"
                          Name="mnuSaveProt"
                          />
                <MenuItem Header="beenden"
                          Name="mnuAppExit"
                           />
            </MenuItem>
        </Menu>
        <!-- Zeichenbereich: in diesem ist dynamisch ein Canvas Element einzufügen -->
        <StackPanel Orientation="Horizontal" Grid.Row="1">
            <StackPanel Orientation="Vertical" Width="6cm">
                <StackPanel Orientation="Horizontal">
                    <TextBox Name="tbxA" Width="4cm" TextAlignment="Right">
                        <TextBox.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFBF6F5" Offset="0"/>
                                <GradientStop Color="#FFEE3911" Offset="1"/>
                            </LinearGradientBrush>
                        </TextBox.Background>
                    </TextBox>
                    <Label>&lt;= A</Label>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBox Name="tbxB" Width="4cm" TextAlignment="Right"></TextBox>
                    <Label>&lt;= B</Label>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <GroupBox Width="4cm" BorderThickness="0">
                        <StackPanel Orientation="Horizontal">
                            <RadioButton Name="rbtAdd" IsChecked="true" Margin="0,0,10,0">+</RadioButton>
                            <RadioButton Name="rbtSub" IsChecked="false" Margin="0,0,10,0">-</RadioButton>
                            <RadioButton Name="rbtMul" IsChecked="false" Margin="0,0,10,0">*</RadioButton>
                            <RadioButton Name="rbtDiv" IsChecked="false" Margin="0,0,10,0">/</RadioButton>
                        </StackPanel>
                    </GroupBox>
                    <Button Name="btnExeRadioButtonSelection" Padding="10,0,10,0" Click="btnExeRadioButtonSelection_Click">EXE</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBox Name="tbxRes" Width="4cm" TextAlignment="Right"></TextBox>
                    <Label>&lt;= Res</Label>
                </StackPanel>

                <TextBlock Name="tblockMsg"></TextBlock>
                <Image Height="100"/>
            </StackPanel>
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="LogDate" Width="2cm" Background="Beige"/>
                    <TextBlock Text="Op" Width="2cm"/>
                    <TextBlock Text="OpA" Width="2cm" Background="Beige"/>
                    <TextBlock Text="OpB" Width="2cm"/>
                    <TextBlock Text="Res" Width="2cm" Background="Beige"/>
                </StackPanel>
                <ListBox Name="LbxProtokoll">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <!-- Achtung: die ersten {} bedeuten in XAML, dass { als auch } als Escape Sequenzen zu lesen sind -->
                                <!-- Alternativ hätte man auch StringFormat=\{0:T\} schreiben können ...-->
                                <TextBlock Text="{Binding LogDate, StringFormat={}{0:T}}" Width="2cm" TextAlignment="Center" Padding="0,0,2,0" Background="Beige"/>
                                <TextBlock Text="{Binding Op}"  TextAlignment="Center" Padding="0,0,2,0" Width="2cm"/>
                                <TextBlock Text="{Binding OpA}" TextAlignment="Right" Padding="0,0,2,0" Width="2cm"  Background="Beige"/>
                                <TextBlock Text="{Binding OpB}" TextAlignment="Right" Padding="0,0,2,0" Width="2cm"/>
                                <TextBlock Text="{Binding Res}" TextAlignment="Right" Padding="0,0,2,0" Width="2cm" Background="Beige"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </StackPanel>
        <!-- Status Bar -->
            <StatusBar Grid.Row="2">
                <StatusBarItem x:Name="statusBarText"
                           Width="100" />
                <ProgressBar x:Name="progBarStatus"
                         Height="20"
                         Minimum="0"
                         Maximum="100"
                         Width="100" />
                <StatusBarItem x:Name="statusBarShapeCount"
                           Width="100"
                           Content="# 0" />
            </StatusBar>
    </Grid>
</Window>
